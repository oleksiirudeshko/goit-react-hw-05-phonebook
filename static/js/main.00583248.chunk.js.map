{"version":3,"sources":["components/ContactList/ContactList.module.css","components/Notify/notify.module.css","components/ContactEditor/logo.module.css","components/Filter/filter.module.css","components/Section.js","components/ContactList/ContactListItem.js","components/ContactList/ContactList.js","components/ContactEditor/ContactEditor.js","components/Filter/Filter.js","components/Notify/Notification.js","components/App.js","index.js"],"names":["module","exports","Section","children","ContactListItem","name","number","onRemove","className","s","listItem","type","onClick","ContactList","contacts","onRemovecontact","check","length","undefined","TransitionGroup","in","toString","component","map","id","CSSTransition","classNames","sTransition","timeout","INIT","ContactEditor","state","handleChange","target","value","setState","handleSubmit","e","preventDefault","props","onAddContact","this","appear","unmountOnExit","onSubmit","htmlFor","onChange","Component","Filter","onChangeFilter","PropTypes","string","Notification","timer","clearTimeout","setTimeout","onNotify","bind","notify","App","filter","unic","addContact","contact","uuidv4","find","prevState","removeContact","contactId","changeFilter","getFilterName","toLowerCase","includes","removeNotification","savedContacts","localStorage","getItem","JSON","parse","setItem","stringify","filterContacts","sNotify","sFilter","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.00583248.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"ContactList_enter__6gFuU\",\"enterActive\":\"ContactList_enterActive__3Y0_4\",\"exit\":\"ContactList_exit__tgUod\",\"exitActive\":\"ContactList_exitActive__YNrD1\",\"listItem\":\"ContactList_listItem__1IjZ3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"notify_enter__2OB6-\",\"enterActive\":\"notify_enterActive__3vDMA\",\"exit\":\"notify_exit__pnWq9\",\"exitActive\":\"notify_exitActive__1WHVL\",\"notify\":\"notify_notify__-X8IW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appear\":\"logo_appear__25MTa\",\"appearActive\":\"logo_appearActive__3RAug\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"filter_enter__2ykYh\",\"enterActive\":\"filter_enterActive__39LyD\",\"exit\":\"filter_exit__b3GwR\",\"exitActive\":\"filter_exitActive__KJYfW\"};","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Section({ children }) {\n  return <section>{children}</section>;\n}\n\nSection.propTypes = {\n  children: PropTypes.node.isRequired,\n};\nexport default Section;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport s from \"./ContactList.module.css\";\n\nconst ContactListItem = ({ name, number, onRemove }) => (\n  <li className={s.listItem}>\n    <span>\n      {name} {number}\n    </span>\n    <button type=\"button\" className=\"deleteBtn\" onClick={onRemove}>\n      x\n    </button>\n  </li>\n);\n\nContactListItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onRemove: PropTypes.func.isRequired,\n};\n\nexport default ContactListItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\n\nimport ContactListItem from './ContactListItem';\n\nimport sTransition from './ContactList.module.css';\n\nconst ContactList = ({ contacts, onRemovecontact }) => {\n  const check = contacts.length > 0 ? true : undefined;\n  return (\n    <TransitionGroup in={{ check }.toString()} component=\"ul\" className=\"List\">\n      {contacts.map(({ id, name, number }) => (\n        <CSSTransition\n          in={true}\n          key={id}\n          classNames={sTransition}\n          timeout={250}\n        >\n          <ContactListItem\n            name={name}\n            number={number}\n            onRemove={() => onRemovecontact(id)}\n          />\n        </CSSTransition>\n      ))}\n    </TransitionGroup>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.exact({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n  onRemovecontact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { CSSTransition } from \"react-transition-group\";\n\nimport ContactList from \"../ContactList/ContactList\";\n\nimport sTransition from \"./logo.module.css\";\n\nconst INIT = {\n  name: \"\",\n  number: \"\",\n};\n\nexport default class ContactEditor extends Component {\n  state = INIT;\n\n  handleChange = ({ target }) => {\n    const { name, value } = target;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    this.props.onAddContact(this.state);\n    this.setState(INIT);\n  };\n  componentDidMount() {}\n  render() {\n    const { name, number } = this.state;\n    return (\n      <>\n        <CSSTransition\n          in={true}\n          appear={true}\n          timeout={500}\n          classNames={sTransition}\n          unmountOnExit\n        >\n          <h1>Phonebook</h1>\n        </CSSTransition>\n\n        <form onSubmit={this.handleSubmit}>\n          <label htmlFor=\"name\">\n            Name\n            <br />\n            <input\n              type=\"text\"\n              value={name}\n              onChange={this.handleChange}\n              name=\"name\"\n            />\n          </label>\n          <label htmlFor=\"number\">\n            Number\n            <br />\n            <input\n              type=\"text\"\n              value={number}\n              onChange={this.handleChange}\n              name=\"number\"\n            />\n          </label>\n          <button className=\"add_contact\" type=\"submit\">\n            Add contact\n          </button>\n        </form>\n      </>\n    );\n  }\n}\nContactList.PropTypes = {\n  name: PropTypes.string,\n  number: PropTypes.string,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport default function Filter({ value, onChangeFilter }) {\n  return (\n    <div className=\"find\">\n      <span>Find contacts by name</span>\n      <input\n        type=\"text\"\n        value={value}\n        onChange={({ target }) => onChangeFilter(target.value)}\n      />\n    </div>\n  );\n}\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChangeFilter: PropTypes.func.isRequired,\n};\n","import React, { Component } from \"react\";\nimport s from \"./notify.module.css\";\n\nclass Notification extends Component {\n  state = {\n    timer: null,\n  };\n\n  componentDidUpdate() {\n    clearTimeout(this.timer);\n  }\n\n  render() {\n    this.timer = setTimeout(this.props.onNotify.bind(this), 3000);\n\n    return (\n      <div className={s.notify} onClick={() => this.props.onNotify()}>\n        Contact alredy exist!\n      </div>\n    );\n  }\n}\n\nexport default Notification;\n","import React, { Component } from \"react\";\nimport { CSSTransition } from \"react-transition-group\";\n\nimport Section from \"./Section\";\nimport ContactList from \"./ContactList/ContactList\";\nimport ContactEditor from \"./ContactEditor/ContactEditor\";\nimport Filter from \"./Filter/Filter\";\nimport Notification from \"./Notify/Notification\";\n\nimport { v4 as uuidv4 } from \"uuid\";\n\nimport sNotify from \"./Notify/notify.module.css\";\nimport sFilter from \"./Filter/filter.module.css\";\n\nexport default class App extends Component {\n  state = {\n    contacts: [],\n    filter: \"\",\n    unic: \"\",\n  };\n\n  componentDidMount() {\n    const savedContacts = localStorage.getItem(\"contacts\");\n    if (savedContacts) {\n      this.setState({\n        contacts: JSON.parse(savedContacts),\n      });\n    }\n  }\n\n  componentDidUpdate(prevState) {\n    if (prevState.contacts !== this.state.contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    }\n  }\n\n  addContact = ({ name, number }) => {\n    const contact = {\n      id: uuidv4(),\n      name: name,\n      number: number,\n    };\n\n    const UnicName = this.state.contacts.find(\n      (contact) => contact.name === name\n    );\n    if (UnicName) {\n      this.setState({ unic: \"true\" });\n    } else {\n      this.setState((prevState) => {\n        return { contacts: [...prevState.contacts, contact] };\n      });\n    }\n  };\n\n  removeContact = (contactId) => {\n    this.setState((prevState) => {\n      return {\n        contacts: prevState.contacts.filter(({ id }) => id !== contactId),\n      };\n    });\n  };\n\n  changeFilter = (filter) => {\n    this.setState({ filter });\n  };\n\n  getFilterName = () => {\n    const { contacts, filter } = this.state;\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  removeNotification = () => {\n    this.setState({ unic: \"\" });\n  };\n\n  render() {\n    const { filter, contacts, unic } = this.state;\n    const filterContacts = this.getFilterName();\n\n    return (\n      <Section>\n        <CSSTransition\n          in={unic ? true : undefined}\n          classNames={sNotify}\n          timeout={250}\n          unmountOnExit\n        >\n          <Notification onNotify={this.removeNotification} />\n        </CSSTransition>\n\n        <ContactEditor onAddContact={this.addContact} />\n\n        <>\n          <CSSTransition\n            in={contacts.length > 0 ? true : undefined}\n            classNames={sFilter}\n            timeout={250}\n            unmountOnExit\n          >\n            <Filter value={filter} onChangeFilter={this.changeFilter} />\n          </CSSTransition>\n\n          <CSSTransition in={true} timeout={0} unmountOnExit>\n            <ContactList\n              contacts={filterContacts}\n              onRemovecontact={this.removeContact}\n            />\n          </CSSTransition>\n        </>\n      </Section>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}